// 单精度浮点数 二进制表示
#include <stdio.h>
#include <string.h>
int main()
{
    float data; unsigned long buff;
    int i; char s[34];

    data = (float)0.75;          // 将0.75以单精度浮点数的形式存储在变量date中。
    memcpy(&buff, &data, 4);     // 把数据复制到4字节长度的整数变量buff中以逐个提取出每一位。

    for (i = 33; i >= 0; i--)    // 逐一提取出每一位
    {
        if (i == 1 || i == 10)     
            s[i] = '-';          // 加入破折号来区分符号部分、指数部分和尾数部分。
        else
        {
            if (buff % 2 == 1)   // 为各个字节赋值'0'或者'1'。
                s[i] = '1';
            else
                s[i] = '0';
            buff /= 2;
        }
    }
    s[34] = '\0';
    printf("%s\n", s); // 显示结果。
}
// 0.1   0-01111011-10011001100110011001101
// -0.1  1-01111011-10011001100110011001101
// 0.75  0-01111110-10000000000000000000000
// 符号0正; (126-127)=-1; 1.1x2^-1
